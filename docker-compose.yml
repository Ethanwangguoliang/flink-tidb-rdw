version: '3.8'
services:

  jobmanager:
    image: flink:1.11.1-scala_2.12
    volumes:
      - ./target:/opt/tasks
      - ./logs/jobmanager/:/opt/flink/log/
    hostname: "jobmanager"
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      
  taskmanager:
    image: flink:1.11.1-scala_2.12
    volumes:
      - ./target:/opt/tasks
      - ./logs/taskmanager/:/opt/flink/log/
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 8

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./logs/kafka/:/kafka/
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  canal-server:
    image: canal/canal-server:v1.1.4
    container_name: canal-server
    ports:
      - "11111:11111"
    volumes:
      - ./logs/canal-server-logs/:/home/admin/canal-server/logs/
      - ./config/canal-config/:/home/admin/canal-server/conf/
    depends_on:
      - db
      - zookeeper

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: tpcc
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./config/mysql:/docker-entrypoint-initdb.d

  pd:
    image: pingcap/pd:latest
    ports:
      - "2379"
    volumes:
      - ./config/tidb-config/pd.toml:/pd.toml:ro
    command:
      - --name=pd
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd:2379
      - --advertise-peer-urls=http://pd:2380
      - --initial-cluster=pd=http://pd:2380
      - --data-dir=/data/pd
      - --config=/pd.toml
      - --log-file=/logs/pd.log
    restart: on-failure

  tikv:
    image: pingcap/tikv:latest
    volumes:
      - ./config/tidb-config/tikv.toml:/tikv.toml:ro
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv:20160
      - --data-dir=/data/tikv
      - --pd=pd:2379
      - --config=/tikv.toml
      - --log-file=/logs/tikv.log
    depends_on:
      - "pd"
    restart: on-failure

  tidb:
    image: pingcap/tidb:latest
    ports:
      - "4000:4000"
      - "10080:10080"
    volumes:
      - ./config/tidb-config/tidb.toml:/tidb.toml:ro
    command:
      - --store=tikv
      - --path=pd:2379
      - --config=/tidb.toml
      - --log-file=/logs/tidb.log
      - --advertise-address=tidb
    depends_on:
      - "tikv"
    restart: on-failure

  tidb-initialize:
    image: mysql
    volumes:
      - ./config/tidb-config/init.sql:/initsql/tidb-init.sql
      - ./config/tidb-config/tidb-init.sh:/initsql/tidb-init.sh


  go-tpc:
    image: registry.cn-beijing.aliyuncs.com/handlerww/go-tpc:latest

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
        - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
        - "9090:9090"
            
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    environment:
      GF_LOG_LEVEL: error
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
    volumes:
      - ./config/grafana:/etc/grafana
      - ./config/grafana-dashboard:/tmp/dashboards
    ports:
        - "3000:3000"